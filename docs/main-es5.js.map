{"version":3,"sources":["webpack:///src/app/stores.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/add-your-store/add-your-store.component.ts","webpack:///src/app/add-your-store/add-your-store.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/countries.service.ts","webpack:///src/app/app.module.ts","webpack:///src/app/http-request-interceptor.ts","webpack:///src/app/loading.service.ts","webpack:///src/app/store-box/store-box.component.ts","webpack:///src/app/store-box/store-box.component.html","webpack:///src/app/store-list/store-list.component.ts","webpack:///src/app/store-list/store-list.component.html","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["StoresService","http","attempts","storesUrl","postUrl","url","currentUrl","get","pipe","data","err","status","getStores","console","log","error","store","post","environment","production","AddYourStoreComponent","_loading","formBuilder","storesService","countriesService","countries","fileName","addStoreForm","group","name","required","address","website","googlemaps_link","picture","country","state","event","target","files","length","file","myStore","postStore","subscribe","getCountries","myFormValue","value","myFormData","FormData","reset","Object","entries","key","undefined","append","onFileChanged","onSubmit","AppComponent","title","CountriesService","countriesUrl","AppModule","provide","useClass","multi","HttpRequestInterceptor","request","next","setLoading","handle","evt","LoadingService","loadingSub","loadingMap","Map","loading","Error","set","has","size","StoreBoxComponent","faMapMarkerAlt","StoreListComponent","storeList","paginationNext","paginationPrevious","pagesShown","numberOfPages","Math","ceil","currentPage","Number","split","paginationAddress","includes","initializer","endCondition","min","i","push","listenToLoading","bootstrapModule","webpackEmptyAsyncContext","req","Promise","resolve","then","e","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Store } from './store';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoresService {\n\n  constructor(private http: HttpClient) { };\n\n  private attempts = 0;\n\n  private storesUrl = 'http://localhost:8000/stores/?format=json';\n\n  // private storesUrl = 'https://testing-cardano-back.herokuapp.com/stores/?format=json';\n\n  // private storesUrl = 'https://cardano-directory-back.herokuapp.com/stores/?format=json';\n\n  getStores(url: string): Observable<any> {\n    const currentUrl = url ?? this.storesUrl;\n\n    return this.http.get(currentUrl).pipe(\n      tap(data => {\n        this.attempts = 0;\n      }),\n      catchError((err) => {\n        if (err.status === 0 && this.attempts === 0) {\n          this.attempts += 1;\n          return this.getStores(currentUrl)\n        } else {\n          console.log('error caught in service');\n          console.error(err);\n          return throwError(err);\n        }\n      })\n    )\n  }\n\n  private postUrl = 'http://localhost:8000/stores/';\n\n  postStore(store: FormData): Observable<any> {\n\n    return this.http.post<Store>(this.postUrl, store)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators, FormControl, FormGroup }\n  from '@angular/forms';\nimport { LoadingService } from '../loading.service';\n\nimport { StoresService } from '../stores.service';\nimport { CountriesService } from '../countries.service';\n\n\n\n@Component({\n  selector: 'app-add-your-store',\n  templateUrl: './add-your-store.component.html',\n  styleUrls: ['./add-your-store.component.css']\n})\nexport class AddYourStoreComponent {\n\n  picture: File;\n  countries: Object = {}; // This is a key:value list with country 'name' and\n  // url values because the API is a hyperlinked serializer\n  fileName: string = '';\n\n  addStoreForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    address: ['', Validators.required],\n    website: ['', Validators.required],\n    googlemaps_link: [null], // Name convention according to backend\n    picture: [null],\n    country: [null],\n    state: null,\n\n  });\n\n  constructor(\n    private _loading: LoadingService,\n    private formBuilder: FormBuilder,\n    private storesService: StoresService,\n    private countriesService: CountriesService,\n\n  ) { }\n\n  public onFileChanged(event: any) {\n    if (event.target.files && event.target.files.length) {\n      const file = event.target.files[0];\n      this.picture = file;\n      this.fileName = file.name;\n    }\n  }\n\n  postStore(myStore: FormData) {\n    this.storesService\n      .postStore(myStore)\n      .subscribe();\n  }\n\n  getCountries() {\n    this.countriesService.getCountries().subscribe((data: JSON) => {\n      this.countries = data\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  ngOnInit() {\n    this.getCountries();\n  }\n\n  onSubmit(): void {\n    const myFormValue = this.addStoreForm.value;\n    const myFormData = new FormData();\n    this.addStoreForm.reset();\n    this.fileName = '';\n\n    for (const [key, value] of Object.entries(myFormValue)) {\n      if (key === 'picture' && myFormValue[key] != undefined) {\n        myFormData.append(key, this.picture);\n      } else if (value != null && value != undefined) {\n        myFormData.append(key, myFormValue[key]);\n      }\n    }\n\n    this.postStore(myFormData);\n\n    console.log(myFormData);\n  }\n}\n","<!--/.add-your-store-->\n\n<section class='form'>\n\t<div class=\"form-add-store\">\n\t\t<label>Name:</label>\n\t\t<input id=\"store-name\" placeholder=\"Ex: Cardano Software Factory\" type=\"text\" formControlName=\"name\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Website:</label>\n\t\t<input id=\"website\" placeholder=\"Ex: https://cardansoftware.com\" type=\"text\" formControlName=\"website\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Address:</label>\n\t\t<input id=\"address\" placeholder=\"Ex: 706 Rosewood Dr, Palo Alto, CA\" type=\"text\" formControlName=\"address\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Google Maps Link:</label>\n\t\t<input id=\"googlemaps\" placeholder=\"Ex: https://goo.gl/maps/HDDgTHh14mS74adg9\" type=\"text\" formControlName=\"googlemaps_link\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Country:</label>\n\t\t<select id=\"country\" class=\"select-css\" formControlName=\"country\">\n\t\t\t<option *ngFor=\"let country of countries\" [ngValue]=\"country.url\">\n\t\t\t\t{{ country.name }}\n\t\t\t</option>\n\t\t</select>\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Image</label>\n\t\t<label for=\"image\" class=\"custom-file-upload\">\n\t\t\t<i class=\"fa fa-cloud-upload\"></i> Upload image\n\t\t</label>\n\t\t<input id=\"image\" type=\"file\" (change)=\"onFileChanged($event)\" formControlName=\"picture\">\n\t\t<p> {{ fileName }} </p>\n\t</div>\n</section>\n\n\n<section id=\"add-store\" class=\"add-your-store\">\n\t<div class=\"container\">\n\t\t<div class=\"add-your-store-txt\">\n\t\t\t<h2>add your store</h2>\n\t\t\t<p>\n\t\t\t\tAdd your store, business, or art gallery to PayAda Directories\n\t\t\t\tand be found all over the world \n\t\t\t</p>\n\t\t</div>\n\t</div>\n\t<section class='form'>\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Name:</label>\n\t\t\t<input id=\"store-name\" placeholder=\"Ex: Cardano Software Factory\" type=\"text\" formControlName=\"name\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Website:</label>\n\t\t\t<input id=\"website\" placeholder=\"Ex: https://cardansoftware.com\" type=\"text\" formControlName=\"website\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Address:</label>\n\t\t\t<input id=\"address\" placeholder=\"Ex: 706 Rosewood Dr, Palo Alto, CA\" type=\"text\" formControlName=\"address\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Google Maps Link:</label>\n\t\t\t<input id=\"googlemaps\" placeholder=\"Ex: https://goo.gl/maps/HDDgTHh14mS74adg9\" type=\"text\" formControlName=\"googlemaps_link\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Country:</label>\n\t\t\t<select id=\"country\" class=\"select-css\" formControlName=\"country\">\n\t\t\t\t<option *ngFor=\"let country of countries\" [ngValue]=\"country.url\">\n\t\t\t\t\t{{ country.name }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Image</label>\n\t\t\t<label for=\"image\" class=\"custom-file-upload\">\n\t\t\t\t<i class=\"fa fa-cloud-upload\"></i> Upload image\n\t\t\t</label>\n\t\t\t<input id=\"image\" type=\"file\" (change)=\"onFileChanged($event)\" formControlName=\"picture\">\n\t\t\t<p> {{ fileName }} </p>\n\t\t</div>\n\t</section>\n\t\n\t<form [formGroup]=\"addStoreForm\" (ngSubmit)=\"onSubmit()\">\n\t\t<div class=\"add-your-store-box\">\t\t\t\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"single-add-your-store-form\">\n\t\t\t\t\t<h3>Name</h3>\n\t\t\t\t\t<input id=\"store-name\" placeholder=\"Ex: Cardano Software Factory\" type=\"text\" formControlName=\"name\">\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"add-your-store-box\">\t\t\t\n\t\t\t<div class=\"add-your-store-form\">\t\t\t\t\t\t\t\t\t\n\t\t\t\t<div class=\"single-add-your-store-form row\">\n\t\t\t\t\t<h3>Website</h3>\t\t\t\t\t\t\n\t\t\t\t\t<input id=\"website\" placeholder=\"Ex: https://cardansoftware.com\" type=\"text\" formControlName=\"website\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"single-add-your-store-form\">\n\t\t\t\t\t<h3>Address</h3>\n\t\t\t\t\t<input id=\"address\" placeholder=\"Ex: 706 Rosewood Dr, Palo Alto, CA\" type=\"text\" formControlName=\"address\">\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"single-add-your-store-form\">\n\t\t\t\t\t<h3>Googlemaps Link (optional)</h3>\n\t\t\t\t\t<input id=\"googlemaps\" placeholder=\"Ex: https://goo.gl/maps/HDDgTHh14mS74adg9\" type=\"text\" formControlName=\"googlemaps_link\">\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"add-your-store-form-select\">\n\t\t\t\t\t<h3>Country (optional)</h3>\n\t\t\t\t\t<select id=\"country\" class=\"select-css\" formControlName=\"country\">\n\t\t\t\t\t\t<option *ngFor=\"let country of countries\" [ngValue]=\"country.url\">\n\t\t\t\t\t\t\t{{ country.name }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"add-your-store-form-upload\">\n\t\t\t\t\t<h3>Image (optional)</h3>\n\t\t\t\t\t<label for=\"image\" class=\"custom-file-upload\">\n\t\t\t\t\t\t<i class=\"fa fa-cloud-upload\"></i> Upload image\n\t\t\t\t\t</label>\n\t\t\t\t\t<input id=\"image\" type=\"file\" (change)=\"onFileChanged($event)\" formControlName=\"picture\">\n\t\t\t\t\t<p> {{ fileName }} </p>\n\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<p>Complete the required fields to add your store</p>\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<button class=\"add-your-store-btn\" type=\"sumbit\"\n\t\t\t\t [disabled]=\"!addStoreForm.valid\">Add Store</button>\n\t\t</div>\n\n\n\t</form>\n\t\n\n\t\t\n\n\n\t\t\n\n</section><!--/.add-your-store-->\n<!--add-your-store end -->","import { Component } from '@angular/core';\n\nimport { StoresService } from './stores.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Ada and Friends - Business Directory';\n\n  constructor(private storesService: StoresService) { }\n\n}\n\n","<app-store-list></app-store-list>\n\n<app-add-your-store></app-add-your-store>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private http: HttpClient) { };\n\n  private attempts = 0;\n\n  private countriesUrl = 'http://localhost:8000/countries/?format=json';\n\n  // private countriesUrl = 'https://testing-cardano-back.herokuapp.com/countries/?format=json';\n\n  // private countriesUrl = 'https://cardano-directory-back.herokuapp.com/countries/?format=json';\n\n  getCountries(): Observable<any> {\n    return this.http.get(this.countriesUrl).pipe(\n      tap(data => {\n        this.attempts = 0;\n      }),\n      catchError((err) => {\n        if (err.status === 0 && this.attempts === 0) {\n          this.attempts += 1;\n          return this.getCountries()\n        } else {\n          console.log('error caught in service');\n          console.error(err);\n          return throwError(err);\n        }\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { StoreBoxComponent } from './store-box/store-box.component';\nimport { StoreListComponent } from './store-list/store-list.component';\nimport { HttpRequestInterceptor } from './http-request-interceptor';\nimport { AddYourStoreComponent } from './add-your-store/add-your-store.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StoreBoxComponent,\n    StoreListComponent,\n    AddYourStoreComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor, HttpResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators'\nimport { LoadingService } from './loading.service';\n\n/**\n * This class is for intercepting http requests. When a request starts, we set the loadingSub property\n * in the LoadingService to true. Once the request completes and we have a response, set the loadingSub\n * property to false. If an error occurs while servicing the request, set the loadingSub property to false.\n * @class {HttpRequestInterceptor}\n */\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n    constructor(\n        private _loading: LoadingService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        this._loading.setLoading(true, request.url);\n        return next.handle(request)\n            .pipe(catchError((err) => {\n                this._loading.setLoading(false, request.url);\n                return throwError(err);\n            }))\n            .pipe(map<HttpEvent<any>, any>((evt: HttpEvent<any>) => {\n                if (evt instanceof HttpResponse) {\n                    this._loading.setLoading(false, request.url);\n                }\n                return evt;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  loadingSub: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  /**\n   * Contains in-progress loading requests\n   */\n  loadingMap: Map<string, boolean> = new Map<string, boolean>();\n\n  constructor() { }\n\n  /**\n   * Sets the loadingSub property value based on the following:\n   * - If loading is true, add the provided url to the loadingMap with a true value, set loadingSub value to true\n   * - If loading is false, remove the loadingMap entry and only when the map is empty will we set loadingSub to false\n   * This pattern ensures if there are multiple requests awaiting completion, we don't set loading to false before\n   * other requests have completed. At the moment, this function is only called from the @link{HttpRequestInterceptor}\n   * @param loading {boolean}\n   * @param url {string}\n   */\n  setLoading(loading: boolean, url: string): void {\n    if (!url) {\n      throw new Error('The request URL must be provided to the LoadingService.setLoading function');\n    }\n    if (loading === true) {\n      this.loadingMap.set(url, loading);\n      this.loadingSub.next(true);\n    } else if (loading === false && this.loadingMap.has(url)) {\n      this.loadingMap.delete(url);\n    }\n    if (this.loadingMap.size === 0) {\n      this.loadingSub.next(false);\n    }\n  }\n}","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { Store } from '../store';\n\n@Component({\n  selector: 'app-store-box',\n  templateUrl: './store-box.component.html',\n  styleUrls: ['./store-box.component.css']\n})\nexport class StoreBoxComponent implements OnChanges {\n  faMapMarkerAlt = faMapMarkerAlt;\n  @Input() store!: Store;\n\n  @Input() index!: number;\n\n  constructor() { }\n\n  ngOnChanges() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"index%3 === 0\" class=\"clearfix visible-md-block visible-lg-block\"></div>\n<div *ngIf=\"index%2 === 0\" class=\"clearfix visible-sm-block\"></div>\n<div class=\" col-md-4 col-sm-6\">\n    <div class=\"single-explore-item\">\n        <div class=\"single-explore-img\">\n            <img src=\"{{ store.picture }}\" alt=\"shop image\">            \n        </div>\n        <div class=\"single-explore-txt bg-theme-1\">\n            <div class=\"explore-person\"> <!--Gray division line -->\n            <h2><a href=\"{{ store.website }}\" target=\"_blank\" rel=\"noopener noreferrer\"> {{ store.name }} </a></h2>\n                 <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"explore-rating-price\">\n                            <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <p *ngIf=\"store.state; else elseBlock\">{{ store.address }}, {{ store.state}}</p>\n                                <ng-template #elseBlock>{{ store.address }}</ng-template></a>\n                            <br>\n                            <div *ngIf=\"store.country_name\">\n                                <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\">{{ store.country_name }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"explore-open-close-part\">\n                <div class=\"row\">\n                    <div class=\"col-xs-5\">\n                        <a href=\"{{ store.website }}\" target=\"_blank\" rel=\"noreferrer noopener\">\n                        <button class=\"close-btn open-btn\">open website</button>\n                        </a>\n                    </div>                  \n                    <div class=\"col-xs-7\">\n                        <div class=\"explore-map-icon\">\n                            <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\"><fa-icon [icon]=\"faMapMarkerAlt\"></fa-icon></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { delay } from 'rxjs/operators';\n\nimport { Store, Pagination } from '../store';\nimport { StoresService } from '../stores.service';\nimport { LoadingService } from '../loading.service';\n\n@Component({\n  selector: 'app-store-list',\n  templateUrl: './store-list.component.html',\n  styleUrls: ['./store-list.component.css']\n})\nexport class StoreListComponent implements OnInit {\n\n  loading: boolean = false;\n\n  storeList: Store[] = [];\n  paginationNext: string = '';\n  paginationPrevious: string = '';\n  numberOfPages: number;\n  currentPage: number;\n  pagesShown: Pagination[] = [];\n  initializer: number;\n  endCondition: number; // Sets the final number of pages to paginate.\n  paginationAddress: string;\n\n\n  getStores(url?: string) {\n    this.storesService.getStores(url).subscribe((data: JSON) => {\n      this.storeList = data['results'];\n      this.paginationNext = data['next'];\n      this.paginationPrevious = data['previous'];\n      this.numberOfPages = Math.ceil(data['count'] / 9);\n\n      // Extraction ofthe current page number from \"next page\" link\n      if (this.paginationNext !== null) {\n        this.currentPage = Number(this.paginationNext.split('page=')[1]) - 1;\n        this.paginationAddress = this.paginationNext.split('page=')[0];\n      } else {\n        this.currentPage = this.numberOfPages;\n      }\n      // Selection of the page numbers to be displayed on the pagination nav\n\n      this.pagesShown = []; // We reset the list on every API call\n\n      // Set initializer and end condition for pages loop\n\n      if (this.numberOfPages <= 5 || [1, 2].includes(this.currentPage)) {\n        this.initializer = 1;\n        this.endCondition = Math.min(this.numberOfPages, 5);\n      } else if ([this.numberOfPages, this.numberOfPages - 1].includes(\n        this.currentPage)) {\n        this.initializer = this.currentPage - 4;\n        this.endCondition = this.numberOfPages;\n      } else {\n        this.initializer = this.currentPage - 2;\n        this.endCondition = this.currentPage + 2;\n      }\n\n      // Set pages to be shown with corresponding API address\n\n      for (let i = this.initializer; i <= this.endCondition; i++) {\n        this.pagesShown.push({\n          \"number\": i,\n          \"address\": `${this.paginationAddress}page=${i}`\n        })\n      }\n    }, err => {\n      console.log(err);\n    }\n    );\n  }\n\n\n  constructor(private _loading: LoadingService,\n    private storesService: StoresService) { }\n\n  ngOnInit() {\n    this.getStores();\n    this.listenToLoading();\n  }\n\n  listenToLoading(): void {\n    this._loading.loadingSub\n      .pipe(delay(0)) // This prevents a ExpressionChangedAfterItHasBeenCheckedError for subsequent requests\n      .subscribe((loading) => {\n        this.loading = loading;\n      });\n  }\n\n}\n","<div style=\"text-align:left\">\n\t\t<!--explore start -->\n\t\t<section id=\"explore\" class=\"explore\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"section-header\">\n\t\t\t\t\t<h2>find your store</h2>\n\t\t\t\t\t<p>Find stores and businesses that accept Ada, the Cardano Native Token</p>\n\t\t\t\t\t<div *ngIf=\"loading\">\n    \t\t\t\t\t<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div><!--/.section-header-->\n\t\t\t\t<div class=\"explore-content\">\n\t\t\t\t\t<div class=\"row\">\n\n\t\t\t\t\t\t<app-store-box *ngFor=\"let item of storeList; let indexOfStore=index\" [store]=\"item\" \n\t\t\t\t\t\t[index]=\"indexOfStore\"></app-store-box>\t\n\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<nav aria-label=\"pagination\">\n\t\t\t\t\t\t<ul class=\"pagination\">\n\t\t\t\t\t\t\t<li><button class=\"pagination-btn\" [disabled]=\"currentPage == 1\" (click)=\"getStores(paginationPrevious)\"><span>«</span></button></li>\n\t\t\t\t\t\t\t<li *ngFor=\"let page of pagesShown\"><button class=\"pagination-btn\" [disabled]=\"currentPage == page['number']\" (click)=\"getStores(page['address'])\">{{page['number']}}</button></li>\n\t\t\t\t\t\t\t<li><button class=\"pagination-btn\" [disabled]=\"currentPage == numberOfPages\" (click)=\"getStores(paginationNext)\"><span class=\"visuallyhidden\"></span><span aria-hidden=\"true\">»</span></button></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\n\t\t\t\t</div>\n\t\t\t</div><!--/.container-->\n\n\t\t</section><!--/.explore-->\n\t\t<!--explore end -->\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}