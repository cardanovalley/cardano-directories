{"version":3,"sources":["./src/app/stores.service.ts","./src/environments/environment.ts","./src/app/add-your-store/add-your-store.component.ts","./src/app/add-your-store/add-your-store.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/countries.service.ts","./src/app/app.module.ts","./src/app/http-request-interceptor.ts","./src/app/loading.service.ts","./src/app/store-box/store-box.component.ts","./src/app/store-box/store-box.component.html","./src/app/store-list/store-list.component.ts","./src/app/store-list/store-list.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Store } from './store';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoresService {\n\n  constructor(private http: HttpClient) { };\n\n  private attempts = 0;\n\n  private storesUrl = 'http://localhost:8000/stores/?format=json';\n\n  // private storesUrl = 'https://testing-cardano-back.herokuapp.com/stores/?format=json';\n\n  // private storesUrl = 'https://cardano-directory-back.herokuapp.com/stores/?format=json';\n\n  getStores(url: string): Observable<any> {\n    const currentUrl = url ?? this.storesUrl;\n\n    return this.http.get(currentUrl).pipe(\n      tap(data => {\n        this.attempts = 0;\n      }),\n      catchError((err) => {\n        if (err.status === 0 && this.attempts === 0) {\n          this.attempts += 1;\n          return this.getStores(currentUrl)\n        } else {\n          console.log('error caught in service');\n          console.error(err);\n          return throwError(err);\n        }\n      })\n    )\n  }\n\n  private postUrl = 'http://localhost:8000/stores/';\n\n  postStore(store: FormData): Observable<any> {\n\n    return this.http.post<Store>(this.postUrl, store)\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { FormBuilder, Validators, FormControl, FormGroup }\n  from '@angular/forms';\nimport { LoadingService } from '../loading.service';\n\nimport { StoresService } from '../stores.service';\nimport { CountriesService } from '../countries.service';\n\n\n\n@Component({\n  selector: 'app-add-your-store',\n  templateUrl: './add-your-store.component.html',\n  styleUrls: ['./add-your-store.component.css']\n})\nexport class AddYourStoreComponent {\n\n  picture: File;\n  countries: Object = {}; // This is a key:value list with country 'name' and\n  // url values because the API is a hyperlinked serializer\n  fileName: string = '';\n\n  addStoreForm = this.formBuilder.group({\n    name: ['', Validators.required],\n    address: ['', Validators.required],\n    website: ['', Validators.required],\n    googlemaps_link: [null], // Name convention according to backend\n    picture: [null],\n    country: [null],\n    state: null,\n\n  });\n\n  constructor(\n    private _loading: LoadingService,\n    private formBuilder: FormBuilder,\n    private storesService: StoresService,\n    private countriesService: CountriesService,\n\n  ) { }\n\n  public onFileChanged(event: any) {\n    if (event.target.files && event.target.files.length) {\n      const file = event.target.files[0];\n      this.picture = file;\n      this.fileName = file.name;\n    }\n  }\n\n  postStore(myStore: FormData) {\n    this.storesService\n      .postStore(myStore)\n      .subscribe();\n  }\n\n  getCountries() {\n    this.countriesService.getCountries().subscribe((data: JSON) => {\n      this.countries = data\n    }, err => {\n      console.log(err);\n    });\n  }\n\n  ngOnInit() {\n    this.getCountries();\n  }\n\n  onSubmit(): void {\n    const myFormValue = this.addStoreForm.value;\n    const myFormData = new FormData();\n    this.addStoreForm.reset();\n    this.fileName = '';\n\n    for (const [key, value] of Object.entries(myFormValue)) {\n      if (key === 'picture' && myFormValue[key] != undefined) {\n        myFormData.append(key, this.picture);\n      } else if (value != null && value != undefined) {\n        myFormData.append(key, myFormValue[key]);\n      }\n    }\n\n    this.postStore(myFormData);\n\n    console.log(myFormData);\n  }\n}\n","<!--/.add-your-store-->\n\n<section class='form'>\n\t<div class=\"form-add-store\">\n\t\t<label>Name:</label>\n\t\t<input id=\"store-name\" placeholder=\"Ex: Cardano Software Factory\" type=\"text\" formControlName=\"name\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Website:</label>\n\t\t<input id=\"website\" placeholder=\"Ex: https://cardansoftware.com\" type=\"text\" formControlName=\"website\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Address:</label>\n\t\t<input id=\"address\" placeholder=\"Ex: 706 Rosewood Dr, Palo Alto, CA\" type=\"text\" formControlName=\"address\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Google Maps Link:</label>\n\t\t<input id=\"googlemaps\" placeholder=\"Ex: https://goo.gl/maps/HDDgTHh14mS74adg9\" type=\"text\" formControlName=\"googlemaps_link\">\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Country:</label>\n\t\t<select id=\"country\" class=\"select-css\" formControlName=\"country\">\n\t\t\t<option *ngFor=\"let country of countries\" [ngValue]=\"country.url\">\n\t\t\t\t{{ country.name }}\n\t\t\t</option>\n\t\t</select>\n\t</div>\n\n\t<div class=\"form-add-store\">\n\t\t<label>Image</label>\n\t\t<label for=\"image\" class=\"custom-file-upload\">\n\t\t\t<i class=\"fa fa-cloud-upload\"></i> Upload image\n\t\t</label>\n\t\t<input id=\"image\" type=\"file\" (change)=\"onFileChanged($event)\" formControlName=\"picture\">\n\t\t<p> {{ fileName }} </p>\n\t</div>\n</section>\n\n\n<section id=\"add-store\" class=\"add-your-store\">\n\t<div class=\"container\">\n\t\t<div class=\"add-your-store-txt\">\n\t\t\t<h2>add your store</h2>\n\t\t\t<p>\n\t\t\t\tAdd your store, business, or art gallery to PayAda Directories\n\t\t\t\tand be found all over the world \n\t\t\t</p>\n\t\t</div>\n\t</div>\n\t<section class='form'>\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Name:</label>\n\t\t\t<input id=\"store-name\" placeholder=\"Ex: Cardano Software Factory\" type=\"text\" formControlName=\"name\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Website:</label>\n\t\t\t<input id=\"website\" placeholder=\"Ex: https://cardansoftware.com\" type=\"text\" formControlName=\"website\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Address:</label>\n\t\t\t<input id=\"address\" placeholder=\"Ex: 706 Rosewood Dr, Palo Alto, CA\" type=\"text\" formControlName=\"address\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Google Maps Link:</label>\n\t\t\t<input id=\"googlemaps\" placeholder=\"Ex: https://goo.gl/maps/HDDgTHh14mS74adg9\" type=\"text\" formControlName=\"googlemaps_link\">\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Country:</label>\n\t\t\t<select id=\"country\" class=\"select-css\" formControlName=\"country\">\n\t\t\t\t<option *ngFor=\"let country of countries\" [ngValue]=\"country.url\">\n\t\t\t\t\t{{ country.name }}\n\t\t\t\t</option>\n\t\t\t</select>\n\t\t</div>\n\n\t\t<div class=\"form-add-store\">\n\t\t\t<label>Image</label>\n\t\t\t<label for=\"image\" class=\"custom-file-upload\">\n\t\t\t\t<i class=\"fa fa-cloud-upload\"></i> Upload image\n\t\t\t</label>\n\t\t\t<input id=\"image\" type=\"file\" (change)=\"onFileChanged($event)\" formControlName=\"picture\">\n\t\t\t<p> {{ fileName }} </p>\n\t\t</div>\n\t</section>\n\t\n\t<form [formGroup]=\"addStoreForm\" (ngSubmit)=\"onSubmit()\">\n\t\t<div class=\"add-your-store-box\">\t\t\t\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"single-add-your-store-form\">\n\t\t\t\t\t<h3>Name</h3>\n\t\t\t\t\t<input id=\"store-name\" placeholder=\"Ex: Cardano Software Factory\" type=\"text\" formControlName=\"name\">\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"add-your-store-box\">\t\t\t\n\t\t\t<div class=\"add-your-store-form\">\t\t\t\t\t\t\t\t\t\n\t\t\t\t<div class=\"single-add-your-store-form row\">\n\t\t\t\t\t<h3>Website</h3>\t\t\t\t\t\t\n\t\t\t\t\t<input id=\"website\" placeholder=\"Ex: https://cardansoftware.com\" type=\"text\" formControlName=\"website\">\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"single-add-your-store-form\">\n\t\t\t\t\t<h3>Address</h3>\n\t\t\t\t\t<input id=\"address\" placeholder=\"Ex: 706 Rosewood Dr, Palo Alto, CA\" type=\"text\" formControlName=\"address\">\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\n\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"single-add-your-store-form\">\n\t\t\t\t\t<h3>Googlemaps Link (optional)</h3>\n\t\t\t\t\t<input id=\"googlemaps\" placeholder=\"Ex: https://goo.gl/maps/HDDgTHh14mS74adg9\" type=\"text\" formControlName=\"googlemaps_link\">\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"add-your-store-form-select\">\n\t\t\t\t\t<h3>Country (optional)</h3>\n\t\t\t\t\t<select id=\"country\" class=\"select-css\" formControlName=\"country\">\n\t\t\t\t\t\t<option *ngFor=\"let country of countries\" [ngValue]=\"country.url\">\n\t\t\t\t\t\t\t{{ country.name }}\n\t\t\t\t\t\t</option>\n\t\t\t\t\t</select>\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<div class=\"add-your-store-form\">\n\t\t\t\t<div class=\"add-your-store-form-upload\">\n\t\t\t\t\t<h3>Image (optional)</h3>\n\t\t\t\t\t<label for=\"image\" class=\"custom-file-upload\">\n\t\t\t\t\t\t<i class=\"fa fa-cloud-upload\"></i> Upload image\n\t\t\t\t\t</label>\n\t\t\t\t\t<input id=\"image\" type=\"file\" (change)=\"onFileChanged($event)\" formControlName=\"picture\">\n\t\t\t\t\t<p> {{ fileName }} </p>\n\n\t\t\t\t</div>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t\t<p>Complete the required fields to add your store</p>\n\t\t<div class=\"add-your-store-box\">\n\t\t\t<button class=\"add-your-store-btn\" type=\"sumbit\"\n\t\t\t\t [disabled]=\"!addStoreForm.valid\">Add Store</button>\n\t\t</div>\n\n\n\t</form>\n\t\n\n\t\t\n\n\n\t\t\n\n</section><!--/.add-your-store-->\n<!--add-your-store end -->","import { Component } from '@angular/core';\n\nimport { StoresService } from './stores.service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  title = 'Ada and Friends - Business Directory';\n\n  constructor(private storesService: StoresService) { }\n\n}\n\n","<app-store-list></app-store-list>\n\n<app-add-your-store></app-add-your-store>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private http: HttpClient) { };\n\n  private attempts = 0;\n\n  private countriesUrl = 'http://localhost:8000/countries/?format=json';\n\n  // private countriesUrl = 'https://testing-cardano-back.herokuapp.com/countries/?format=json';\n\n  // private countriesUrl = 'https://cardano-directory-back.herokuapp.com/countries/?format=json';\n\n  getCountries(): Observable<any> {\n    return this.http.get(this.countriesUrl).pipe(\n      tap(data => {\n        this.attempts = 0;\n      }),\n      catchError((err) => {\n        if (err.status === 0 && this.attempts === 0) {\n          this.attempts += 1;\n          return this.getCountries()\n        } else {\n          console.log('error caught in service');\n          console.error(err);\n          return throwError(err);\n        }\n      })\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { AppComponent } from './app.component';\nimport { StoreBoxComponent } from './store-box/store-box.component';\nimport { StoreListComponent } from './store-list/store-list.component';\nimport { HttpRequestInterceptor } from './http-request-interceptor';\nimport { AddYourStoreComponent } from './add-your-store/add-your-store.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StoreBoxComponent,\n    StoreListComponent,\n    AddYourStoreComponent\n  ],\n  imports: [\n    HttpClientModule,\n    BrowserModule,\n    FontAwesomeModule,\n    ReactiveFormsModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: HttpRequestInterceptor, multi: true }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport {\n    HttpRequest,\n    HttpHandler,\n    HttpEvent,\n    HttpInterceptor, HttpResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators'\nimport { LoadingService } from './loading.service';\n\n/**\n * This class is for intercepting http requests. When a request starts, we set the loadingSub property\n * in the LoadingService to true. Once the request completes and we have a response, set the loadingSub\n * property to false. If an error occurs while servicing the request, set the loadingSub property to false.\n * @class {HttpRequestInterceptor}\n */\n@Injectable()\nexport class HttpRequestInterceptor implements HttpInterceptor {\n\n    constructor(\n        private _loading: LoadingService\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler):\n        Observable<HttpEvent<any>> {\n        this._loading.setLoading(true, request.url);\n        return next.handle(request)\n            .pipe(catchError((err) => {\n                this._loading.setLoading(false, request.url);\n                return throwError(err);\n            }))\n            .pipe(map<HttpEvent<any>, any>((evt: HttpEvent<any>) => {\n                if (evt instanceof HttpResponse) {\n                    this._loading.setLoading(false, request.url);\n                }\n                return evt;\n            }));\n    }\n}","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoadingService {\n  loadingSub: BehaviorSubject<boolean> = new BehaviorSubject<boolean>(false);\n  /**\n   * Contains in-progress loading requests\n   */\n  loadingMap: Map<string, boolean> = new Map<string, boolean>();\n\n  constructor() { }\n\n  /**\n   * Sets the loadingSub property value based on the following:\n   * - If loading is true, add the provided url to the loadingMap with a true value, set loadingSub value to true\n   * - If loading is false, remove the loadingMap entry and only when the map is empty will we set loadingSub to false\n   * This pattern ensures if there are multiple requests awaiting completion, we don't set loading to false before\n   * other requests have completed. At the moment, this function is only called from the @link{HttpRequestInterceptor}\n   * @param loading {boolean}\n   * @param url {string}\n   */\n  setLoading(loading: boolean, url: string): void {\n    if (!url) {\n      throw new Error('The request URL must be provided to the LoadingService.setLoading function');\n    }\n    if (loading === true) {\n      this.loadingMap.set(url, loading);\n      this.loadingSub.next(true);\n    } else if (loading === false && this.loadingMap.has(url)) {\n      this.loadingMap.delete(url);\n    }\n    if (this.loadingMap.size === 0) {\n      this.loadingSub.next(false);\n    }\n  }\n}","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { faMapMarkerAlt } from '@fortawesome/free-solid-svg-icons';\n\nimport { Store } from '../store';\n\n@Component({\n  selector: 'app-store-box',\n  templateUrl: './store-box.component.html',\n  styleUrls: ['./store-box.component.css']\n})\nexport class StoreBoxComponent implements OnChanges {\n  faMapMarkerAlt = faMapMarkerAlt;\n  @Input() store!: Store;\n\n  @Input() index!: number;\n\n  constructor() { }\n\n  ngOnChanges() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div *ngIf=\"index%3 === 0\" class=\"clearfix visible-md-block visible-lg-block\"></div>\n<div *ngIf=\"index%2 === 0\" class=\"clearfix visible-sm-block\"></div>\n<div class=\" col-md-4 col-sm-6\">\n    <div class=\"single-explore-item\">\n        <div class=\"single-explore-img\">\n            <img src=\"{{ store.picture }}\" alt=\"shop image\">            \n        </div>\n        <div class=\"single-explore-txt bg-theme-1\">\n            <div class=\"explore-person\"> <!--Gray division line -->\n            <h2><a href=\"{{ store.website }}\" target=\"_blank\" rel=\"noopener noreferrer\"> {{ store.name }} </a></h2>\n                 <div class=\"row\">\n                    <div class=\"col-sm-10\">\n                        <div class=\"explore-rating-price\">\n                            <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\">\n                                <p *ngIf=\"store.state; else elseBlock\">{{ store.address }}, {{ store.state}}</p>\n                                <ng-template #elseBlock>{{ store.address }}</ng-template></a>\n                            <br>\n                            <div *ngIf=\"store.country_name\">\n                                <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\">{{ store.country_name }}</a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"explore-open-close-part\">\n                <div class=\"row\">\n                    <div class=\"col-xs-5\">\n                        <a href=\"{{ store.website }}\" target=\"_blank\" rel=\"noreferrer noopener\">\n                        <button class=\"close-btn open-btn\">open website</button>\n                        </a>\n                    </div>                  \n                    <div class=\"col-xs-7\">\n                        <div class=\"explore-map-icon\">\n                            <a href=\"{{ store.googlemaps_link }}\" target=\"_blank\" rel=\"noopener noreferrer\"><fa-icon [icon]=\"faMapMarkerAlt\"></fa-icon></a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { delay } from 'rxjs/operators';\n\nimport { Store, Pagination } from '../store';\nimport { StoresService } from '../stores.service';\nimport { LoadingService } from '../loading.service';\n\n@Component({\n  selector: 'app-store-list',\n  templateUrl: './store-list.component.html',\n  styleUrls: ['./store-list.component.css']\n})\nexport class StoreListComponent implements OnInit {\n\n  loading: boolean = false;\n\n  storeList: Store[] = [];\n  paginationNext: string = '';\n  paginationPrevious: string = '';\n  numberOfPages: number;\n  currentPage: number;\n  pagesShown: Pagination[] = [];\n  initializer: number;\n  endCondition: number; // Sets the final number of pages to paginate.\n  paginationAddress: string;\n\n\n  getStores(url?: string) {\n    this.storesService.getStores(url).subscribe((data: JSON) => {\n      this.storeList = data['results'];\n      this.paginationNext = data['next'];\n      this.paginationPrevious = data['previous'];\n      this.numberOfPages = Math.ceil(data['count'] / 9);\n\n      // Extraction ofthe current page number from \"next page\" link\n      if (this.paginationNext !== null) {\n        this.currentPage = Number(this.paginationNext.split('page=')[1]) - 1;\n        this.paginationAddress = this.paginationNext.split('page=')[0];\n      } else {\n        this.currentPage = this.numberOfPages;\n      }\n      // Selection of the page numbers to be displayed on the pagination nav\n\n      this.pagesShown = []; // We reset the list on every API call\n\n      // Set initializer and end condition for pages loop\n\n      if (this.numberOfPages <= 5 || [1, 2].includes(this.currentPage)) {\n        this.initializer = 1;\n        this.endCondition = Math.min(this.numberOfPages, 5);\n      } else if ([this.numberOfPages, this.numberOfPages - 1].includes(\n        this.currentPage)) {\n        this.initializer = this.currentPage - 4;\n        this.endCondition = this.numberOfPages;\n      } else {\n        this.initializer = this.currentPage - 2;\n        this.endCondition = this.currentPage + 2;\n      }\n\n      // Set pages to be shown with corresponding API address\n\n      for (let i = this.initializer; i <= this.endCondition; i++) {\n        this.pagesShown.push({\n          \"number\": i,\n          \"address\": `${this.paginationAddress}page=${i}`\n        })\n      }\n    }, err => {\n      console.log(err);\n    }\n    );\n  }\n\n\n  constructor(private _loading: LoadingService,\n    private storesService: StoresService) { }\n\n  ngOnInit() {\n    this.getStores();\n    this.listenToLoading();\n  }\n\n  listenToLoading(): void {\n    this._loading.loadingSub\n      .pipe(delay(0)) // This prevents a ExpressionChangedAfterItHasBeenCheckedError for subsequent requests\n      .subscribe((loading) => {\n        this.loading = loading;\n      });\n  }\n\n}\n","<div style=\"text-align:left\">\n\t\t<!--explore start -->\n\t\t<section id=\"explore\" class=\"explore\">\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"section-header\">\n\t\t\t\t\t<h2>find your store</h2>\n\t\t\t\t\t<p>Find stores and businesses that accept Ada, the Cardano Native Token</p>\n\t\t\t\t\t<div *ngIf=\"loading\">\n    \t\t\t\t\t<div class=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div><!--/.section-header-->\n\t\t\t\t<div class=\"explore-content\">\n\t\t\t\t\t<div class=\"row\">\n\n\t\t\t\t\t\t<app-store-box *ngFor=\"let item of storeList; let indexOfStore=index\" [store]=\"item\" \n\t\t\t\t\t\t[index]=\"indexOfStore\"></app-store-box>\t\n\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<nav aria-label=\"pagination\">\n\t\t\t\t\t\t<ul class=\"pagination\">\n\t\t\t\t\t\t\t<li><button class=\"pagination-btn\" [disabled]=\"currentPage == 1\" (click)=\"getStores(paginationPrevious)\"><span>«</span></button></li>\n\t\t\t\t\t\t\t<li *ngFor=\"let page of pagesShown\"><button class=\"pagination-btn\" [disabled]=\"currentPage == page['number']\" (click)=\"getStores(page['address'])\">{{page['number']}}</button></li>\n\t\t\t\t\t\t\t<li><button class=\"pagination-btn\" [disabled]=\"currentPage == numberOfPages\" (click)=\"getStores(paginationNext)\"><span class=\"visuallyhidden\"></span><span aria-hidden=\"true\">»</span></button></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</nav>\n\n\t\t\t\t</div>\n\t\t\t</div><!--/.container-->\n\n\t\t</section><!--/.explore-->\n\t\t<!--explore end -->\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}